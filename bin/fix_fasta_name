#! /usr/bin/ruby

if !ARGV[0] || !ARGV[1]
    STDERR.puts "usage: fix_fasta_name glob"
    STDERR.puts "Updates the fasta files so that the sequence name inside the file matches the"
    STDERR.puts "file's basename"
    STDERR.puts ""
    STDERR.puts "If called without arguments, processes all files in the current directory.:"
    STDERR.puts "Otherwise, processes the glob given as argument"
    exit 1
end

$LOAD_PATH.unshift File.expand_path('../lib', File.dirname(__FILE__))
require 'formats'
require 'tempfile'
require 'fileutils'

fasta_count = 0
Dir.glob(ARGV[0] || '*') do |file|
    if File.file?(file)
	if is_fasta?(file)
	    input  = File.open(file)
	    input.readline

	    output_name = "#{file}.new"
	    seq_name = File.basename(file, File.extname(file))
	    File.open(output_name, 'w') do |output|
		output.puts ">#{seq_name}"
		output.write input.read
	    end

	    FileUtils.rm_f file
	    FileUtils.mv output_name, file
	    fasta_count += 1
	else
	    puts "#{file} is not a FASTA file"

	end
    end
end
puts "Fixed #{fasta_count} files"

